rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function authEmailDomain() {
      return "pseudo.apprentissage";
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function normalizedAuthEmail() {
      return isSignedIn() && request.auth.token.email != null
        ? lower(request.auth.token.email)
        : null;
    }

    function expectedEmailFor(userId) {
      return lower(userId) + "@" + authEmailDomain();
    }

    function hasMatchingPseudo(userId) {
      return (let email = normalizedAuthEmail();
        email != null && email == expectedEmailFor(userId));
    }

    function userRecord(userId) {
      return get(/databases/$(database)/documents/users/$(userId));
    }

    function ownerMatches(userId) {
      return isSignedIn() &&
        (let record = userRecord(userId);
          record.exists() &&
          (
            (record.data.ownerUid is string && record.data.ownerUid == request.auth.uid) ||
            (let email = normalizedAuthEmail();
              email != null &&
              record.data.ownerEmail is string &&
              lower(record.data.ownerEmail) == email)
          )
        );
    }

    function isOwner(userId) {
      return hasMatchingPseudo(userId) || ownerMatches(userId);
    }

    function ensureOwnerFields() {
      return request.auth != null &&
        request.auth.uid != null &&
        request.resource.data.ownerUid is string &&
        request.resource.data.ownerUid == request.auth.uid &&
        (let email = normalizedAuthEmail();
          email != null &&
          request.resource.data.ownerEmail is string &&
          lower(request.resource.data.ownerEmail) == email);
    }

    match /users/{userId} {
      allow create: if isSignedIn() && hasMatchingPseudo(userId) && ensureOwnerFields();
      allow read: if true;
      allow update: if isOwner(userId) && ensureOwnerFields();
      allow delete: if isOwner(userId);

      match /notes/{noteId} {
        allow read, create, update, delete: if isOwner(userId);
      }
    }
  }
}
